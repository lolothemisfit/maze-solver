global obstacleList 

obstacleList = []

maze = [
    '+++++++++++++++++++++++++++++  ++++++++++',
    '++  ++++ +++   +++++              +++++++',
    '++ ++++  ++ +    ++++++    +  +  + ++++++',
    '+   ++   ++ +++ +++    +++++     ++++++++',
    '+ +++++ ++      +++++  +++++  ++ ++++++++',
    '+       +++ ++++ ++   ++++++++       ++++',
    '+ +++ ++++      ++++  ++++++   ++++    ++',
    '+ ++      +++  ++++    +++   +  +++++++++',
    '+ ++ ++++ ++  +++++ ++ +      +++++++++++',
    '+     +++ +++     +       +     +   +++++',
    '+ +++ +++ ++++  ++++++   ++  ++++  ++++++',
    '+ +++ +++       +++   +   +  +++++     ++',
    '+   + +++ ++ ++  +++   + + + ++ + + +  ++',
    '+++++ +++ ++ ++  ++++ +      ++++++ +  ++',
    '+            ++  +++   ++++      +++  +++',
    '+ +++++  ++++++  ++++++  ++++++   +    ++',
    '+ +++++  ++++++  +++  +   +      +   ++++',
    '++++++             +++++++   +++ ++   +++',
    '++++++     +++++++++  +++++   ++++++++ ++',
    '++++++++++ +++++++++      +++   ++++++ ++',
    '+      +       +++++++++    ++  + +++  ++',
    '+ +++++    +++ ++ ++  +++++ ++    ++   ++',
    '+           ++++  ++ +  +++++++        ++',
    '+++++++++ ++++ ++ +++++++     ++++++   ++',
    '+++                +++++++  ++++++    +++',
    '+++ ++++ ++++  +++++++++++++++++    +++++',
    '+++     +++++  +++++      ++++    +++++++',
    '+++ ++++++++      ++  ++++++    +++++++++',
    '+++ +++++++++  +++++     +++  +++++++++++',
    '+++ +++++++++  +++++  ++++   + + ++ ++ ++',
    '             ++++++   ++++  +++++++++++++',
    '+   ++++  +++      +         ++++++++++++',
    '++ +       +++ +++++++++   +  +++++++++++',
    '+     ++++        ++    +       +++++++++',
    '++++  ++  +++++ + + +  +++++   ++++++++++',
    '+++   ++++   ++++         +     ++     ++',
    '+++     +++  +++++++   ++    +++  +++  ++',
    '++++  ++++  ++++++++  ++++++   +++++   ++',
    '+++++++++  +++++++++    +++      +++ + ++',
    '+++++     ++++++++    +    ++   ++++  +++',
    '+++++++++++++++      ++++++++  ++++++++++',
    '++  ++++ +++                      +++++++',
    '++ ++++  ++ +    ++++++    +  +  + ++++++',
    '+   ++   ++ +++ +++    +++++     ++++++++',
    '+ +++++ ++      +++++  +++++  ++ ++++++++',
    '+       +++ +  + ++   +++++++        ++++',
    '+ +++ ++++      ++++  ++++++   ++++    ++',
    '+ ++      +++  ++++    +++   +  +++++++++',
    '+ ++ ++++ ++  +++++ ++ +      +++++++++++',
    '+     +++ ++      +       ++    +   +++++',
    '+ +++ +++ ++++  ++++++   ++  ++++  ++++++',
    '+ +++ +++        ++   +   +  +++++     ++',
    '+   + +++ ++ ++  +++   + + + ++ + + +  ++',
    '+++++ +++ ++ ++  ++++ +      ++++++ +  ++',
    '+            ++  +++   ++++    +++++  +++',
    '+ +++++  ++++++  ++++++  +++++    +    ++',
    '+ +++++  ++++++  +++  +   +  +  ++   ++++',
    '+ ++++           +++++++++   +++ ++   +++',
    '++++++     +++++++++  +++++   +  +++++ ++',
    '++++++++++ +++++++++      +++      +++ ++',
    '+      +       +++++++++    ++  +  ++  ++',
    '+ +++++    +++ ++ ++  +++++ ++     +   ++',
    '+           ++++  ++ +  ++++++           ',
    '+++++++++ ++++ ++ +++++++     ++++++    +',
    '+++                +++++++  ++++++    +++',
    '+++ ++++ ++++  +++++++++++++++++    +++++',
    '+++     +++++  +++++      ++++    +++++++',
    '+++ ++++++++      ++  ++++++    +++++++++',
    '+++ +++++++++  +++++     +++  +++++++++++',
    '+++ ++++++++   +++++  ++++   + + ++ ++ ++',
    '++            ++++++   ++++  ++++++++++++',
    '+   +++++++        +         ++++++++++++',
    '++ +       +++ +++++++++   +  +++++++++++',
    '+     ++++     +++++    +       +++++++++',
    '++++  ++    +++ + + +  +++++   ++++++++++',
    '+++   ++++   +++++++      +++   ++     ++',
    '+++     +++  +++++++   ++    +++  +++  ++',
    '++++  ++++  ++++++++  ++++++   +++++   ++',
    '+++++++++  ++++++++++   +++      +++ + ++',
    '++++++++  +++++++++++++++++++++++++++++++',
    '++++++++  +++++++++++++++++++++++++++++++'

]


x_obs_size = int(250/len(maze[0])) - 1
y_obs_size = int(450/len(maze))
  

def get_obstacles():
    
    obstacles = []

    
    for y in range(len(maze)):
        for x in range(len(maze[y])):
            character = maze[y][x]
            if character == '+':
                x_obstacle = -100 + (x*x_obs_size)
                y_obstacle = 200 - (y*y_obs_size)
                obstacles.append([x_obstacle,y_obstacle])
    return obstacles


# def path():
#     path = []
#     for y in range(len(maze)):
#         for x in range(len(maze[y])):
#             character = maze[y][x]
#             if character == '+':
#                 x_obstacle = -100 + (x*x_obs_size)
#                 y_obstacle = 200 - (y*y_obs_size)
#                 path.append([x_obstacle,y_obstacle])

#     return path


def is_position_blocked(x,y):
    for i in obstacleList:

        if x == i[0] and y == i[1]:
            return True
        
    if is_path_blocked(x,y):
        return True
    else:
        return False



def is_path_blocked(x,y):
    for i in obstacleList:

        if x in range(i[0], i[0]+4) and y in range(i[1], i[1]+4):
            return True


def obstacle_statement(x,y):
    print(f"- At position {x},{y} (to {x+4},{y+4})")
